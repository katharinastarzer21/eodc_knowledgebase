{"version":2,"kind":"Notebook","sha256":"085df593d20496e06dd7ceff0593e7c0bb15180d62b913cd0045b61d8c130795","slug":"gfm-plot-flood-scene","location":"/source/services/GFM/gfm_plot_flood_scene.ipynb","dependencies":[],"frontmatter":{"title":"Plot GFM flood scene","subtitle":"This tutorial will show how to plot a part of a flooded GFM scene using an OpenStreetMap basemap as background.","tags":["GFM"],"copyright":"Â© 2024 eodc","authors":[{"id":"Author: eodc","name":"Author: eodc"}],"license":{"content":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"thumbnail":"/e09f7271f6c188a68020a7d6a49ba21c.svg","kernelspec":{"name":"python3","display_name":"eodc_cluster","language":"python"},"numbering":{"title":{"offset":2}},"exports":[{"format":"ipynb","filename":"gfm_plot_flood_scene.ipynb","url":"/gfm_plot_flood_scene-fc1148664a82e42ed30da89d03f455f5.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from pystac_client import Client\nfrom datetime import datetime\nfrom odc import stac as odc_stac\nimport pyproj\nimport rioxarray # noqa\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport contextily as cx","key":"TB5EkCDz55"},{"type":"output","id":"st5swreJdGPYV4sjAjwqX","data":[],"key":"EncJWp2ch6"}],"key":"LkHEr3mD6x"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Method to derive the sensing date from a Sentinel-1 scene identifier\ndef get_sensing_date(scene:str) -> datetime:\n    parts = scene.split(\"_\")\n    return datetime.strptime(parts[4], \"%Y%m%dT%H%M%S\")","key":"jEMpwT51q9"},{"type":"output","id":"2ry65pak5TNS04rzAFCUC","data":[],"key":"EBFqpWDEgo"}],"key":"KtVJ4FnkQu"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Define Sentinel-1 scene identifier and asset name to plot\nscene_id = \"S1A_IW_GRDH_1SDV_20220930T224602_20220930T224627_045240_056863\"\nasset_name = \"ensemble_flood_extent\"\n\napi_url = \"https://stac.eodc.eu/api/v1\"\neodc_catalog = Client.open(api_url)\n\nsearch = eodc_catalog.search(\n    collections=[\"GFM\"],\n    datetime=get_sensing_date(scene_id),\n)\n\nprint(\"We found\", search.matched(), \"items, that match our filter criteria.\")","key":"jF68Cv5re7"},{"type":"output","id":"g3IM1b6Sl9rU9-1ZeFENn","data":[{"name":"stdout","output_type":"stream","text":"We found 2 items, that match our filter criteria.\n"}],"key":"y8XWJeOWyG"}],"key":"nEmHpslaK0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Get found STAC items\nitems = search.item_collection()\n\n# Retrieve the CRS from the first found STAC item\ncrs = pyproj.CRS.from_wkt(items[0].properties[\"proj:wkt2\"])\n\n# Load data of selected asset\ndata = odc_stac.load(\n    items, \n    crs=crs,\n    bands=[asset_name],\n    resolution=20,\n    dtype='uint8',\n    )\n\n# Get rid of single time axis\ndata = data[asset_name].squeeze() \n","key":"g1DnLk7Mdh"},{"type":"output","id":"Y6Ys6nYCXRwA_cj04DhqF","data":[],"key":"nBbyYc7xfp"}],"key":"Fz9SvMzdpr"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Find min/max of valid flood data\nmask = data == 1\nindices = np.argwhere(mask.values)\nminx, maxx = np.min(indices[:, 0]), np.max(indices[:, 0])\nminy, maxy = np.min(indices[:, 1]), np.max(indices[:, 1])\n\ndata = data[minx:maxx, miny:maxy]\n\n# Reproject data to \"WebMercator\" to be able to plot on a basemap\nreproj_data = data.rio.reproject(\"EPSG:3857\")\nreproj_data = reproj_data.where((reproj_data == 1)).astype(\"float16\")\n","key":"LV6FEjq6n0"},{"type":"output","id":"6neawQro-79SuYMZHdFBD","data":[],"key":"HtwKCYHkcL"}],"key":"RpOhfE9gHD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Reduce spatial extent due to memory constraints\nplot_data = reproj_data[0:5000,0:5000]","key":"y8Jvwe2uwU"},{"type":"output","id":"hCOugql1-qDE7ciXxCUQf","data":[],"key":"PFQdszw3um"}],"key":"XFYsYbRJS1"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"\n# Plot data and add basemap\nax = plot_data.plot(figsize=(5, 5), label=\"Flood\", add_colorbar=False)\n\ncx.add_basemap(ax.axes, crs='EPSG:3857', source=cx.providers.OpenStreetMap.Mapnik)\n\nplt.title(f\"{scene_id}\\n{asset_name}\")\n\nplt.show()","key":"gGPC3ljW5g"},{"type":"output","id":"NnnxitXB_snBBFU707XSq","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"6c418b12ffbe08b81dfefefc57777f41","path":"/6c418b12ffbe08b81dfefefc57777f41.png"},"text/plain":{"content":"<Figure size 500x500 with 1 Axes>","content_type":"text/plain"}}}],"key":"mfQuZWFItd"}],"key":"T9X6ZOEjs4"}],"key":"Cefp5PxOFB"},"references":{"cite":{"order":[],"data":{}}}}
{"version":2,"kind":"Notebook","sha256":"4056f44f7ceb4cffcfcddabdebf125d63f9e71fc010ddb5533f9cc83dd6735fe","slug":"gfm-maximum-flood-extent-simple-plot","location":"/source/services/GFM/gfm_maximum_flood_extent_simple_plot.ipynb","dependencies":[],"frontmatter":{"title":"Computation of GFM Maximum Flood Extent for a specific area and time of interest","subtitle":"With this notebook we demonstrate how STAC can be used to find GFM data (ensemble_flood_extent) and derive the maximum flood extent from it.","tags":["GFM","STAC"],"copyright":"© 2024 eodc","authors":[{"id":"Author: eodc","name":"Author: eodc"}],"license":{"content":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"thumbnail":"/e09f7271f6c188a68020a7d6a49ba21c.svg","kernelspec":{"name":"python3","display_name":"eodc_cluster","language":"python"},"numbering":{"title":{"offset":2}},"exports":[{"format":"ipynb","filename":"gfm_maximum_flood_extent_simple_plot.ipynb","url":"/gfm_maximum_flood_ex-009ddb515dae4d1fc8e18ef8c6e4677d.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Necessary python imports\n\nfrom pystac_client import Client\nfrom odc import stac as odc_stac\nimport pyproj\nimport xarray as xr\nfrom shapely.geometry import Polygon\nimport matplotlib.pyplot as plt","key":"w0ImeDdWv2"},{"type":"output","id":"YvR-ie2sHnXH4-NZzV_MN","data":[],"key":"U16F9GtNxk"}],"key":"SxaSFmUuip"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Search against the EODC STAC API\ncatalog = Client.open(\n  \"https://stac.eodc.eu/api/v1\"\n)\n\n# Define your area of interest\naoi = {\n  \"type\": \"Polygon\",\n  \"coordinates\": [\n    [\n      [16.432800292968754, 50.747318126029434],\n      [17.87887573242188, 50.747318126029434],\n      [17.87887573242188, 51.306150195330034],\n      [16.432800292968754, 51.306150195330034],\n      [16.432800292968754, 50.747318126029434]\n    ]\n  ]\n}\n\n# Define your temporal range\ndaterange = {\"interval\": [\"2024-09-18T00:00:00Z\", \"2024-09-25T00:00:00Z\"]}\n\n# Define your search with CQL2 syntax\nsearch = catalog.search(filter_lang=\"cql2-json\", filter={\n  \"op\": \"and\",\n  \"args\": [\n    {\"op\": \"s_intersects\", \"args\": [{\"property\": \"geometry\"}, aoi]},\n    {\"op\": \"anyinteracts\", \"args\": [{\"property\": \"datetime\"}, daterange]},\n    {\"op\": \"=\", \"args\": [{\"property\": \"collection\"}, \"GFM\"]}\n  ]\n})\n\n# Retrieve all found items\nitems = search.item_collection()\nprint(\"We found\", len(items), \"items, that match our filter criteria.\")","key":"cieMUVhLi6"},{"type":"output","id":"w5kZ5SbAGSMoErX1fc0xE","data":[{"name":"stdout","output_type":"stream","text":"We found 28 items, that match our filter criteria.\n"}],"key":"MIiPgoSFdK"}],"key":"dNvapWpzz1"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Derive Equi7Grid CRS from first found item\ncrs = pyproj.CRS.from_wkt(items[0].properties[\"proj:wkt2\"])\n\n# Define assets to load\nassets = [\"ensemble_flood_extent\"]\n\n# Get bounding box from AOI\npolygon = Polygon(aoi['coordinates'][0])\n\n# Load asset data into xarray using odc-stac\n# Adjust chunk size of x/y according to available RAM\nxx = odc_stac.load(\n    items, \n    bbox=polygon.bounds,\n    crs=crs,\n    bands=assets,\n    dtype=\"uint8\",\n    chunks={\"x\": 2000, \"y\": 2000, \"time\": -1}, \n    resolution=20)\nxx.ensemble_flood_extent","key":"yU5KoQ3zF7"},{"type":"output","id":"2PMl1jl3elFfzThXF5QAC","data":[{"output_type":"execute_result","execution_count":4,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"883cbb6a974f564a844af6dcc78a4e1d","path":"/883cbb6a974f564a844af6dcc78a4e1d.html"},"text/plain":{"content":"<xarray.DataArray 'ensemble_flood_extent' (time: 21, y: 3577, x: 5343)>\ndask.array<ensemble_flood_extent, shape=(21, 3577, 5343), dtype=uint8, chunksize=(21, 2000, 2000), chunktype=numpy.ndarray>\nCoordinates:\n  * y            (y) float64 1.961e+06 1.961e+06 ... 1.889e+06 1.889e+06\n  * x            (x) float64 5.304e+06 5.304e+06 ... 5.411e+06 5.411e+06\n    spatial_ref  int32 0\n  * time         (time) datetime64[ns] 2024-09-18T05:25:52 ... 2024-09-23T16:...\nAttributes:\n    nodata:   255","content_type":"text/plain"}}}],"key":"lvZ6TkeyG7"}],"key":"s50vihPrWp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Mask data which is nodata (255) and non-flood (0)\nxx = xx.where((xx != 255) & (xx != 0))\n\n# Compute sum along time dimension\ndata = xx.sum(dim=\"time\").astype(\"uint8\")\ndata.ensemble_flood_extent","key":"WHfxjhL2rI"},{"type":"output","id":"Q46gTdAlGLfkYeGglbWAN","data":[{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/html":{"content":"<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n  --xr-background-color: var(--jp-layout-color0, white);\n  --xr-background-color-row-even: var(--jp-layout-color1, white);\n  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n}\n\nhtml[theme=dark],\nbody[data-theme=dark],\nbody.vscode-dark {\n  --xr-font-color0: rgba(255, 255, 255, 1);\n  --xr-font-color2: rgba(255, 255, 255, 0.54);\n  --xr-font-color3: rgba(255, 255, 255, 0.38);\n  --xr-border-color: #1F1F1F;\n  --xr-disabled-color: #515151;\n  --xr-background-color: #111111;\n  --xr-background-color-row-even: #111111;\n  --xr-background-color-row-odd: #313131;\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 20px 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: none;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: '►';\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: '▼';\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: '(';\n}\n\n.xr-dim-list:after {\n  content: ')';\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: ',';\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  margin-bottom: 0;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  background-color: var(--xr-background-color) !important;\n  padding-bottom: 5px !important;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;ensemble_flood_extent&#x27; (y: 3577, x: 5343)&gt;\ndask.array&lt;astype, shape=(3577, 5343), dtype=uint8, chunksize=(2000, 2000), chunktype=numpy.ndarray&gt;\nCoordinates:\n  * y            (y) float64 1.961e+06 1.961e+06 ... 1.889e+06 1.889e+06\n  * x            (x) float64 5.304e+06 5.304e+06 ... 5.411e+06 5.411e+06\n    spatial_ref  int32 0</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'ensemble_flood_extent'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>y</span>: 3577</li><li><span class='xr-has-index'>x</span>: 5343</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-d8103b42-43d6-4263-993e-d7152b859220' class='xr-array-in' type='checkbox' checked><label for='section-d8103b42-43d6-4263-993e-d7152b859220' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>dask.array&lt;chunksize=(2000, 2000), meta=np.ndarray&gt;</span></div><div class='xr-array-data'><table>\n    <tr>\n        <td>\n            <table style=\"border-collapse: collapse;\">\n                <thead>\n                    <tr>\n                        <td> </td>\n                        <th> Array </th>\n                        <th> Chunk </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    \n                    <tr>\n                        <th> Bytes </th>\n                        <td> 18.23 MiB </td>\n                        <td> 3.81 MiB </td>\n                    </tr>\n                    \n                    <tr>\n                        <th> Shape </th>\n                        <td> (3577, 5343) </td>\n                        <td> (2000, 2000) </td>\n                    </tr>\n                    <tr>\n                        <th> Dask graph </th>\n                        <td colspan=\"2\"> 6 chunks in 18 graph layers </td>\n                    </tr>\n                    <tr>\n                        <th> Data type </th>\n                        <td colspan=\"2\"> uint8 numpy.ndarray </td>\n                    </tr>\n                </tbody>\n            </table>\n        </td>\n        <td>\n        <svg width=\"170\" height=\"130\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n\n  <!-- Horizontal lines -->\n  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n  <line x1=\"0\" y1=\"44\" x2=\"120\" y2=\"44\" />\n  <line x1=\"0\" y1=\"80\" x2=\"120\" y2=\"80\" style=\"stroke-width:2\" />\n\n  <!-- Vertical lines -->\n  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"80\" style=\"stroke-width:2\" />\n  <line x1=\"44\" y1=\"0\" x2=\"44\" y2=\"80\" />\n  <line x1=\"89\" y1=\"0\" x2=\"89\" y2=\"80\" />\n  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"80\" style=\"stroke-width:2\" />\n\n  <!-- Colored Rectangle -->\n  <polygon points=\"0.0,0.0 120.0,0.0 120.0,80.33688938798429 0.0,80.33688938798429\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n\n  <!-- Text -->\n  <text x=\"60.000000\" y=\"100.336889\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >5343</text>\n  <text x=\"140.000000\" y=\"40.168445\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,140.000000,40.168445)\">3577</text>\n</svg>\n        </td>\n    </tr>\n</table></div></div></li><li class='xr-section-item'><input id='section-1c7228e0-13bc-4aa7-bd06-5c33e7bf0d02' class='xr-section-summary-in' type='checkbox'  checked><label for='section-1c7228e0-13bc-4aa7-bd06-5c33e7bf0d02' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>1.961e+06 1.961e+06 ... 1.889e+06</div><input id='attrs-53f8c75e-4ef8-40a9-81aa-3ecc9fb0f485' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-53f8c75e-4ef8-40a9-81aa-3ecc9fb0f485' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1f4ffb0b-1337-462a-a92c-ce69ffa8208d' class='xr-var-data-in' type='checkbox'><label for='data-1f4ffb0b-1337-462a-a92c-ce69ffa8208d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>metre</dd><dt><span>resolution :</span></dt><dd>-20.0</dd><dt><span>crs :</span></dt><dd>PROJCS[&quot;Azimuthal_Equidistant&quot;,GEOGCS[&quot;WGS 84&quot;,DATUM[&quot;WGS_1984&quot;,SPHEROID[&quot;WGS 84&quot;,6378137,298.257223563,AUTHORITY[&quot;EPSG&quot;,&quot;7030&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6326&quot;]],PRIMEM[&quot;Greenwich&quot;,0],UNIT[&quot;degree&quot;,0.0174532925199433],AUTHORITY[&quot;EPSG&quot;,&quot;4326&quot;]],PROJECTION[&quot;Azimuthal_Equidistant&quot;],PARAMETER[&quot;latitude_of_center&quot;,53],PARAMETER[&quot;longitude_of_center&quot;,24],PARAMETER[&quot;false_easting&quot;,5837287.81977],PARAMETER[&quot;false_northing&quot;,2121415.69617],UNIT[&quot;metre&quot;,1,AUTHORITY[&quot;EPSG&quot;,&quot;9001&quot;]]]</dd></dl></div><div class='xr-var-data'><pre>array([1960550., 1960530., 1960510., ..., 1889070., 1889050., 1889030.])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>5.304e+06 5.304e+06 ... 5.411e+06</div><input id='attrs-9de7f962-4122-49c2-8313-6051aa0088ab' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-9de7f962-4122-49c2-8313-6051aa0088ab' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-28e17661-c08c-470e-98c5-62e06f936b9e' class='xr-var-data-in' type='checkbox'><label for='data-28e17661-c08c-470e-98c5-62e06f936b9e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>metre</dd><dt><span>resolution :</span></dt><dd>20.0</dd><dt><span>crs :</span></dt><dd>PROJCS[&quot;Azimuthal_Equidistant&quot;,GEOGCS[&quot;WGS 84&quot;,DATUM[&quot;WGS_1984&quot;,SPHEROID[&quot;WGS 84&quot;,6378137,298.257223563,AUTHORITY[&quot;EPSG&quot;,&quot;7030&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6326&quot;]],PRIMEM[&quot;Greenwich&quot;,0],UNIT[&quot;degree&quot;,0.0174532925199433],AUTHORITY[&quot;EPSG&quot;,&quot;4326&quot;]],PROJECTION[&quot;Azimuthal_Equidistant&quot;],PARAMETER[&quot;latitude_of_center&quot;,53],PARAMETER[&quot;longitude_of_center&quot;,24],PARAMETER[&quot;false_easting&quot;,5837287.81977],PARAMETER[&quot;false_northing&quot;,2121415.69617],UNIT[&quot;metre&quot;,1,AUTHORITY[&quot;EPSG&quot;,&quot;9001&quot;]]]</dd></dl></div><div class='xr-var-data'><pre>array([5304030., 5304050., 5304070., ..., 5410830., 5410850., 5410870.])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>spatial_ref</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>int32</div><div class='xr-var-preview xr-preview'>0</div><input id='attrs-c66b9297-ced2-4e7e-b913-08f5c2d030d3' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-c66b9297-ced2-4e7e-b913-08f5c2d030d3' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4e66ea94-a952-4be9-9faa-82354253da78' class='xr-var-data-in' type='checkbox'><label for='data-4e66ea94-a952-4be9-9faa-82354253da78' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>spatial_ref :</span></dt><dd>PROJCRS[&quot;Azimuthal_Equidistant&quot;,BASEGEOGCRS[&quot;WGS 84&quot;,DATUM[&quot;World Geodetic System 1984&quot;,ELLIPSOID[&quot;WGS 84&quot;,6378137,298.257223563,LENGTHUNIT[&quot;metre&quot;,1]]],PRIMEM[&quot;Greenwich&quot;,0,ANGLEUNIT[&quot;degree&quot;,0.0174532925199433]],ID[&quot;EPSG&quot;,4326]],CONVERSION[&quot;unnamed&quot;,METHOD[&quot;Modified Azimuthal Equidistant&quot;,ID[&quot;EPSG&quot;,9832]],PARAMETER[&quot;Latitude of natural origin&quot;,53,ANGLEUNIT[&quot;degree&quot;,0.0174532925199433],ID[&quot;EPSG&quot;,8801]],PARAMETER[&quot;Longitude of natural origin&quot;,24,ANGLEUNIT[&quot;degree&quot;,0.0174532925199433],ID[&quot;EPSG&quot;,8802]],PARAMETER[&quot;False easting&quot;,5837287.81977,LENGTHUNIT[&quot;metre&quot;,1],ID[&quot;EPSG&quot;,8806]],PARAMETER[&quot;False northing&quot;,2121415.69617,LENGTHUNIT[&quot;metre&quot;,1],ID[&quot;EPSG&quot;,8807]]],CS[Cartesian,2],AXIS[&quot;(E)&quot;,east,ORDER[1],LENGTHUNIT[&quot;metre&quot;,1,ID[&quot;EPSG&quot;,9001]]],AXIS[&quot;(N)&quot;,north,ORDER[2],LENGTHUNIT[&quot;metre&quot;,1,ID[&quot;EPSG&quot;,9001]]]]</dd><dt><span>crs_wkt :</span></dt><dd>PROJCRS[&quot;Azimuthal_Equidistant&quot;,BASEGEOGCRS[&quot;WGS 84&quot;,DATUM[&quot;World Geodetic System 1984&quot;,ELLIPSOID[&quot;WGS 84&quot;,6378137,298.257223563,LENGTHUNIT[&quot;metre&quot;,1]]],PRIMEM[&quot;Greenwich&quot;,0,ANGLEUNIT[&quot;degree&quot;,0.0174532925199433]],ID[&quot;EPSG&quot;,4326]],CONVERSION[&quot;unnamed&quot;,METHOD[&quot;Modified Azimuthal Equidistant&quot;,ID[&quot;EPSG&quot;,9832]],PARAMETER[&quot;Latitude of natural origin&quot;,53,ANGLEUNIT[&quot;degree&quot;,0.0174532925199433],ID[&quot;EPSG&quot;,8801]],PARAMETER[&quot;Longitude of natural origin&quot;,24,ANGLEUNIT[&quot;degree&quot;,0.0174532925199433],ID[&quot;EPSG&quot;,8802]],PARAMETER[&quot;False easting&quot;,5837287.81977,LENGTHUNIT[&quot;metre&quot;,1],ID[&quot;EPSG&quot;,8806]],PARAMETER[&quot;False northing&quot;,2121415.69617,LENGTHUNIT[&quot;metre&quot;,1],ID[&quot;EPSG&quot;,8807]]],CS[Cartesian,2],AXIS[&quot;(E)&quot;,east,ORDER[1],LENGTHUNIT[&quot;metre&quot;,1,ID[&quot;EPSG&quot;,9001]]],AXIS[&quot;(N)&quot;,north,ORDER[2],LENGTHUNIT[&quot;metre&quot;,1,ID[&quot;EPSG&quot;,9001]]]]</dd><dt><span>semi_major_axis :</span></dt><dd>6378137.0</dd><dt><span>semi_minor_axis :</span></dt><dd>6356752.314245179</dd><dt><span>inverse_flattening :</span></dt><dd>298.257223563</dd><dt><span>reference_ellipsoid_name :</span></dt><dd>WGS 84</dd><dt><span>longitude_of_prime_meridian :</span></dt><dd>0.0</dd><dt><span>prime_meridian_name :</span></dt><dd>Greenwich</dd><dt><span>geographic_crs_name :</span></dt><dd>WGS 84</dd><dt><span>horizontal_datum_name :</span></dt><dd>World Geodetic System 1984</dd><dt><span>projected_crs_name :</span></dt><dd>Azimuthal_Equidistant</dd><dt><span>grid_mapping_name :</span></dt><dd>azimuthal_equidistant</dd><dt><span>latitude_of_projection_origin :</span></dt><dd>53.0</dd><dt><span>longitude_of_projection_origin :</span></dt><dd>24.0</dd><dt><span>false_easting :</span></dt><dd>5837287.81977</dd><dt><span>false_northing :</span></dt><dd>2121415.69617</dd><dt><span>GeoTransform :</span></dt><dd>5304020 20 0 1960560 0 -20</dd></dl></div><div class='xr-var-data'><pre>array(0, dtype=int32)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-66b569eb-bf71-4cdb-aaee-37c0c7a6de19' class='xr-section-summary-in' type='checkbox'  ><label for='section-66b569eb-bf71-4cdb-aaee-37c0c7a6de19' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-8f72bdf9-0228-47d3-94a8-02380e4245af' class='xr-index-data-in' type='checkbox'/><label for='index-8f72bdf9-0228-47d3-94a8-02380e4245af' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([1960550.0, 1960530.0, 1960510.0, 1960490.0, 1960470.0, 1960450.0,\n       1960430.0, 1960410.0, 1960390.0, 1960370.0,\n       ...\n       1889210.0, 1889190.0, 1889170.0, 1889150.0, 1889130.0, 1889110.0,\n       1889090.0, 1889070.0, 1889050.0, 1889030.0],\n      dtype=&#x27;float64&#x27;, name=&#x27;y&#x27;, length=3577))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-9f370d39-8b9b-4731-8b9c-12f0adcd124b' class='xr-index-data-in' type='checkbox'/><label for='index-9f370d39-8b9b-4731-8b9c-12f0adcd124b' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([5304030.0, 5304050.0, 5304070.0, 5304090.0, 5304110.0, 5304130.0,\n       5304150.0, 5304170.0, 5304190.0, 5304210.0,\n       ...\n       5410690.0, 5410710.0, 5410730.0, 5410750.0, 5410770.0, 5410790.0,\n       5410810.0, 5410830.0, 5410850.0, 5410870.0],\n      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;, length=5343))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-610ea8a6-54ed-41e7-b930-8229fa1c8991' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-610ea8a6-54ed-41e7-b930-8229fa1c8991' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>","content_type":"text/html"},"text/plain":{"content":"<xarray.DataArray 'ensemble_flood_extent' (y: 3577, x: 5343)>\ndask.array<astype, shape=(3577, 5343), dtype=uint8, chunksize=(2000, 2000), chunktype=numpy.ndarray>\nCoordinates:\n  * y            (y) float64 1.961e+06 1.961e+06 ... 1.889e+06 1.889e+06\n  * x            (x) float64 5.304e+06 5.304e+06 ... 5.411e+06 5.411e+06\n    spatial_ref  int32 0","content_type":"text/plain"}}}],"key":"GTtXy86Hr5"}],"key":"KndNTesSWl"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Save result as GeoTiff to disk\nimport os\nimport rioxarray\nos.makedirs(\"./maximum_flood_data\", exist_ok=True)\ndata.ensemble_flood_extent.rio.to_raster(\"./maximum_flood_data/result_equi7.tif\", compress=\"LZW\")","key":"fKMoAT2WLH"},{"type":"output","id":"Sb8yn5w1RuAk8A9YQLhQd","data":[],"key":"Uend8NIcfW"}],"key":"PJcYH7P5Gy"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"data.ensemble_flood_extent.plot()\nplt.title(\"GFM Maximum Flood Extent\")\nplt.show()","key":"l0rQCvRtdF"},{"type":"output","id":"pz-BLxrfP2Z_2M1pcKvFv","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"ee71ec43d645b66933e57b2748ca7cb1","path":"/ee71ec43d645b66933e57b2748ca7cb1.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"rL0uhzZu53"}],"key":"vNYDEPcp5o"}],"key":"ZeolPUVXLz"},"references":{"cite":{"order":[],"data":{}}}}